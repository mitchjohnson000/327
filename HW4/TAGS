
heap.c,1009
#undef min4,39
struct heap_node 6,51
  heap_node_t *next;next7,70
  heap_node_t *prev;prev8,91
  heap_node_t *parent;parent9,112
  heap_node_t *child;child10,135
  void *datum;datum11,157
  uint32_t degree;12,172
  uint32_t mark;13,191
#define splice_heap_node_lists(16,212
#define insert_heap_node_in_list(25,524
#define remove_heap_node_from_list(32,748
void print_heap_node(37,881
void print_heap(53,1203
void print_heap_node_list(70,1505
void heap_init(86,1704
void heap_node_delete(96,1940
void heap_delete(114,2244
heap_node_t *heap_insert(heap_insert125,2409
void *heap_peek_min(heap_peek_min145,2725
static void heap_link(150,2801
static void heap_consolidate(164,3123
void *heap_remove_min(heap_remove_min205,4056
int heap_combine(240,4590
static void heap_cut(269,5241
static void heap_cascading_cut(283,5522
int heap_decrease_key(297,5748
int heap_decrease_key_no_replace(311,5990
int32_t compare(335,6564
char *print_int(print_int340,6663
int main(349,6781

heap.h,245
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
  heap_node_t *min;min14,175
  uint32_t size;15,195
  int32_t (*compare)compare16,212
  void (*datum_delete)datum_delete17,269
} heap_t;18,301

macros.h,611
# define MACROS_H2,17
#  define dprintf(16,213
#  define dfprintf(17,256
#  define dprintf(19,320
#  define dfprintf(20,343
# define fieldwidth(23,382
# define exit(37,1201
# define fopen(42,1441
#  define malloc(76,3348
#  define calloc(92,4430
#  define strdup(107,5435
#  define free(117,6055
# define swap(125,6303
# define memswap(131,6415
# define structdup(137,6543
# define datacmp(144,6927
# define max2(153,7400
# define min2(160,7576
# define max 167,7752
# define min 168,7770
# define max3(170,7789
# define min3(171,7830
# define frand(173,7872
# define structdup(180,7984

rlg327.c,2563
# define rand_under(16,338
# define rand_range(20,481
typedef struct corridor_path 22,555
  heap_node_t *hn;hn23,586
  uint8_t pos[pos24,605
  uint8_t from[from25,623
  int32_t cost;26,642
} corridor_path_t;27,658
typedef enum dim 29,678
  dim_x,30,697
  dim_y,31,706
  num_dims32,715
} dim_t;33,726
typedef int16_t pair_t[pair_t35,736
#define DUNGEON_X 37,771
#define DUNGEON_Y 38,806
#define MIN_ROOMS 39,841
#define MAX_ROOMS 40,875
#define ROOM_MIN_X 41,909
#define ROOM_MIN_Y 42,942
#define ROOM_MAX_X 43,975
#define ROOM_MAX_Y 44,1009
#define SAVE_DIR 45,1043
#define DUNGEON_SAVE_FILE 46,1084
#define DUNGEON_SAVE_SEMANTIC 47,1125
#define DUNGEON_SAVE_VERSION 48,1171
#define mappair(50,1208
#define mapxy(51,1265
#define hardnesspair(52,1300
#define hardnessxy(53,1367
typedef enum __attribute__ ((__packed__)) terrain_type 55,1413
  ter_debug,56,1470
  ter_wall,57,1483
  ter_wall_immutable,58,1495
  ter_floor,59,1517
  ter_floor_room,60,1530
  ter_floor_hall,61,1548
  ter_pc,62,1566
} terrain_type_t;63,1576
typedef struct room 65,1595
  pair_t position;66,1617
  pair_t size;67,1636
} room_t;68,1651
typedef struct pc{pc70,1662
	pair_t position;71,1681
}pc_t;pc_t73,1700
typedef struct dungeon 75,1708
  uint32_t num_rooms;76,1733
  room_t *rooms;rooms77,1755
  terrain_type_t map[map78,1772
  uint8_t hardness[hardness87,2425
  pc_t pc;88,2467
} dungeon_t;89,2478
static uint32_t in_room(91,2492
static int32_t corridor_path_cmp(107,2883
static void dijkstra_corridor(111,3033
static void dijkstra_corridor_inv(210,6770
#define hardnesspair_inv(263,8092
static int connect_two_rooms(313,10729
static int create_cycle(332,11381
static int connect_rooms(374,12946
int gaussian[gaussian387,13139
typedef struct queue_node 395,13295
  int x,396,13323
  int x, y;396,13323
  struct queue_node *next;next397,13335
} queue_node_t;398,13362
static int smooth_hardness(400,13379
static int empty_dungeon(558,17655
static int place_rooms(577,18031
static int add_pc(641,20556
static int make_rooms(646,20667
int gen_dungeon(674,21429
void render_dungeon(687,21554
void delete_dungeon(718,22215
void init_dungeon(723,22272
int write_dungeon_map(729,22348
int write_rooms(742,22577
uint32_t calculate_dungeon_size(762,22996
int makedirectory(769,23218
int write_dungeon(804,23854
int read_dungeon_map(863,25239
int read_rooms(886,25837
int calculate_num_rooms(916,26606
int read_dungeon(924,26846
int read_pgm(998,28547
void usage(1081,30672
int main(1091,30882
