
heap.c,1009
#undef min4,39
struct heap_node 6,51
  heap_node_t *next;next7,70
  heap_node_t *prev;prev8,91
  heap_node_t *parent;parent9,112
  heap_node_t *child;child10,135
  void *datum;datum11,157
  uint32_t degree;12,172
  uint32_t mark;13,191
#define splice_heap_node_lists(16,212
#define insert_heap_node_in_list(25,524
#define remove_heap_node_from_list(32,748
void print_heap_node(37,881
void print_heap(53,1203
void print_heap_node_list(70,1505
void heap_init(86,1704
void heap_node_delete(96,1940
void heap_delete(114,2244
heap_node_t *heap_insert(heap_insert125,2409
void *heap_peek_min(heap_peek_min145,2725
static void heap_link(150,2801
static void heap_consolidate(164,3123
void *heap_remove_min(heap_remove_min205,4056
int heap_combine(240,4590
static void heap_cut(269,5241
static void heap_cascading_cut(283,5522
int heap_decrease_key(297,5748
int heap_decrease_key_no_replace(311,5990
int32_t compare(335,6564
char *print_int(print_int340,6663
int main(349,6781

heap.h,245
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
  heap_node_t *min;min14,175
  uint32_t size;15,195
  int32_t (*compare)compare16,212
  void (*datum_delete)datum_delete17,269
} heap_t;18,301

macros.h,611
# define MACROS_H2,17
#  define dprintf(16,213
#  define dfprintf(17,256
#  define dprintf(19,320
#  define dfprintf(20,343
# define fieldwidth(23,382
# define exit(37,1201
# define fopen(42,1441
#  define malloc(76,3348
#  define calloc(92,4430
#  define strdup(107,5435
#  define free(117,6055
# define swap(125,6303
# define memswap(131,6415
# define structdup(137,6543
# define datacmp(144,6927
# define max2(153,7400
# define min2(160,7576
# define max 167,7752
# define min 168,7770
# define max3(170,7789
# define min3(171,7830
# define frand(173,7872
# define structdup(180,7984

rlg327.c,4161
# define rand_under(17,356
# define rand_range(21,499
typedef struct corridor_path 23,573
  heap_node_t *hn;hn24,604
  uint8_t pos[pos25,623
  uint8_t from[from26,641
  int32_t cost;27,660
} corridor_path_t;28,676
typedef enum dim 30,696
  dim_x,31,715
  dim_y,32,724
  num_dims33,733
} dim_t;34,744
typedef int16_t pair_t[pair_t39,781
#define DUNGEON_X 41,816
#define DUNGEON_Y 42,851
#define MIN_ROOMS 43,886
#define MAX_ROOMS 44,920
#define ROOM_MIN_X 45,954
#define ROOM_MIN_Y 46,987
#define ROOM_MAX_X 47,1020
#define ROOM_MAX_Y 48,1054
#define SAVE_DIR 49,1088
#define DUNGEON_SAVE_FILE 50,1129
#define DUNGEON_SAVE_SEMANTIC 51,1170
#define DUNGEON_SAVE_VERSION 52,1216
#define INFINITY 53,1250
#define UNDEFINED 54,1288
#define BIT_SET(55,1322
#define BIT_CLEAR(56,1361
#define BIT_FLIP(57,1403
#define BIT_CHECK(58,1443
#define mappair(60,1486
#define mapxy(61,1543
#define hardnesspair(62,1578
#define hardnessxy(63,1645
typedef enum __attribute__ ((__packed__)) terrain_type 65,1691
  ter_debug,66,1748
  ter_wall,67,1761
  ter_wall_immutable,68,1773
  ter_floor,69,1795
  ter_floor_room,70,1808
  ter_floor_hall,71,1826
  ter_pc,72,1844
} terrain_type_t;73,1854
struct block 75,1873
  int x;76,1888
  int y;77,1897
  int distance;78,1906
  int visited;79,1922
  int weight;80,1937
  terrain_type_t type;81,1951
typedef struct room 85,1979
  pair_t position;86,2001
  pair_t size;87,2020
} room_t;88,2035
typedef struct pc{pc92,2048
	pair_t position;93,2067
}pc_t;pc_t95,2086
typedef struct dungeon 97,2094
  uint32_t num_rooms;98,2119
  room_t *rooms;rooms99,2141
  terrain_type_t map[map100,2158
  uint8_t hardness[hardness109,2811
  pc_t pc;110,2853
  int nummon;111,2864
  uint32_t distance[distance112,2878
  int eventMap[eventMap113,2921
} dungeon_t;114,2959
typedef struct event 116,2973
	int characteristic;117,2996
	int lastSeenX;118,3017
	int lastSeenY;119,3033
	int currentPosX;120,3049
	int currentPosY;121,3067
	int speed;122,3085
    int sequence;123,3097
    int isPC;124,3115
    int nextTurn;125,3129
    void (*movePtr)movePtr126,3147
}event_t;event_t128,3201
static uint32_t in_room(130,3212
static int32_t corridor_path_cmp(146,3603
static void dijkstra_corridor(150,3753
static void dijkstra_corridor_inv(249,7490
#define hardnesspair_inv(302,8812
static int connect_two_rooms(352,11449
static int create_cycle(371,12101
static int connect_rooms(413,13666
int gaussian[gaussian426,13859
typedef struct queue_node 434,14015
  int x,435,14043
  int x, y;435,14043
  struct queue_node *next;next436,14055
} queue_node_t;437,14082
static int smooth_hardness(439,14099
static int empty_dungeon(597,18375
static int place_rooms(616,18751
static int add_pc(680,21276
static int make_rooms(690,21525
int gen_dungeon(718,22287
void render_dungeon(731,22412
void delete_dungeon(762,23073
void init_dungeon(767,23130
int write_dungeon_map(773,23206
int write_rooms(786,23435
uint32_t calculate_dungeon_size(806,23854
int makedirectory(813,24076
int write_dungeon(848,24712
int read_dungeon_map(907,26097
int read_rooms(930,26695
int calculate_num_rooms(960,27464
int read_dungeon(968,27704
int read_pgm(1042,29405
int weightForHardness(1125,31530
struct block extractMin(1134,31806
struct block extractMinNonTunnel(1152,32207
void calculateDistance(1170,32691
void calculateDistanceNonTunnel(1245,34594
int getNextEvent(1320,36673
void moveNothing(1349,37278
void movePC(1355,37390
void moveIntel(1363,37565
void moveTele(1368,37641
void moveIntelTele(1372,37715
void moveTunnel(1376,37794
void moveIntelTunnel(1380,37870
void moveTeleTunnel(1384,37951
void moveIntelTeleTunnel(1388,38031
void moveErratic(1392,38116
void moveIntelErratic(1396,38193
void moveTeleErratic(1400,38275
void moveIntelTeleErratic(1404,38356
void moveTunnelErratic(1408,38442
void moveIntelTunnelErratic(1413,38526
void moveTeleTunnelErratic(1418,38615
void moveIntelTeleTunnelErratic(1422,38702
void generateCharacteristics(1426,38794
void runSimulation(1579,42289
void usage(1592,42583
int main(1602,42793
