
heap.c,1009
#undef min4,39
struct heap_node 6,51
  heap_node_t *next;next7,70
  heap_node_t *prev;prev8,91
  heap_node_t *parent;parent9,112
  heap_node_t *child;child10,135
  void *datum;datum11,157
  uint32_t degree;12,172
  uint32_t mark;13,191
#define splice_heap_node_lists(16,212
#define insert_heap_node_in_list(25,524
#define remove_heap_node_from_list(32,748
void print_heap_node(37,881
void print_heap(53,1203
void print_heap_node_list(70,1505
void heap_init(86,1704
void heap_node_delete(96,1940
void heap_delete(114,2244
heap_node_t *heap_insert(heap_insert125,2409
void *heap_peek_min(heap_peek_min145,2725
static void heap_link(150,2801
static void heap_consolidate(164,3123
void *heap_remove_min(heap_remove_min205,4056
int heap_combine(240,4590
static void heap_cut(269,5241
static void heap_cascading_cut(283,5522
int heap_decrease_key(297,5748
int heap_decrease_key_no_replace(311,5990
int32_t compare(335,6564
char *print_int(print_int340,6663
int main(349,6781

heap.h,245
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
  heap_node_t *min;min14,175
  uint32_t size;15,195
  int32_t (*compare)compare16,212
  void (*datum_delete)datum_delete17,269
} heap_t;18,301

macros.h,611
# define MACROS_H2,17
#  define dprintf(16,213
#  define dfprintf(17,256
#  define dprintf(19,320
#  define dfprintf(20,343
# define fieldwidth(23,382
# define exit(37,1201
# define fopen(42,1441
#  define malloc(76,3348
#  define calloc(92,4430
#  define strdup(107,5435
#  define free(117,6055
# define swap(125,6303
# define memswap(131,6415
# define structdup(137,6543
# define datacmp(144,6927
# define max2(153,7400
# define min2(160,7576
# define max 167,7752
# define min 168,7770
# define max3(170,7789
# define min3(171,7830
# define frand(173,7872
# define structdup(180,7984

rlg327.c,3303
# define rand_under(16,338
# define rand_range(20,481
typedef struct corridor_path 22,555
  heap_node_t *hn;hn23,586
  uint8_t pos[pos24,605
  uint8_t from[from25,623
  int32_t cost;26,642
} corridor_path_t;27,658
typedef enum dim 29,678
  dim_x,30,697
  dim_y,31,706
  num_dims32,715
} dim_t;33,726
typedef int16_t pair_t[pair_t38,763
#define DUNGEON_X 40,798
#define DUNGEON_Y 41,833
#define MIN_ROOMS 42,868
#define MAX_ROOMS 43,902
#define ROOM_MIN_X 44,936
#define ROOM_MIN_Y 45,969
#define ROOM_MAX_X 46,1002
#define ROOM_MAX_Y 47,1036
#define SAVE_DIR 48,1070
#define DUNGEON_SAVE_FILE 49,1111
#define DUNGEON_SAVE_SEMANTIC 50,1152
#define DUNGEON_SAVE_VERSION 51,1198
#define INFINITY 52,1232
#define UNDEFINED 53,1270
#define mappair(55,1307
#define mapxy(56,1364
#define hardnesspair(57,1399
#define hardnessxy(58,1466
typedef enum __attribute__ ((__packed__)) terrain_type 60,1512
  ter_debug,61,1569
  ter_wall,62,1582
  ter_wall_immutable,63,1594
  ter_floor,64,1616
  ter_floor_room,65,1629
  ter_floor_hall,66,1647
  ter_pc,67,1665
} terrain_type_t;68,1675
struct block 70,1694
  int x;71,1709
  int y;72,1718
  int distance;73,1727
  int visited;74,1743
  int weight;75,1758
  terrain_type_t type;76,1772
typedef struct event 78,1798
	int characteristic;79,1821
	int lastSeenX;80,1842
	int lastSeenY;81,1858
	int currentPosX;82,1874
	int currentPosY;83,1892
	int speed;84,1910
	int tick;85,1922
}event_t;event_t86,1933
typedef struct room 88,1944
  pair_t position;89,1966
  pair_t size;90,1985
} room_t;91,2000
typedef struct pc{pc95,2013
	pair_t position;96,2032
}pc_t;pc_t98,2051
typedef struct dungeon 100,2059
  uint32_t num_rooms;101,2084
  room_t *rooms;rooms102,2106
  terrain_type_t map[map103,2123
  uint8_t hardness[hardness112,2776
  pc_t pc;113,2818
  int nummon;114,2829
  uint32_t distance[distance115,2843
} dungeon_t;116,2886
static uint32_t in_room(118,2900
static int32_t corridor_path_cmp(134,3291
static void dijkstra_corridor(138,3441
static void dijkstra_corridor_inv(237,7178
#define hardnesspair_inv(290,8500
static int connect_two_rooms(340,11137
static int create_cycle(359,11789
static int connect_rooms(401,13354
int gaussian[gaussian414,13547
typedef struct queue_node 422,13703
  int x,423,13731
  int x, y;423,13731
  struct queue_node *next;next424,13743
} queue_node_t;425,13770
static int smooth_hardness(427,13787
static int empty_dungeon(585,18063
static int place_rooms(604,18439
static int add_pc(668,20964
static int make_rooms(678,21213
int gen_dungeon(706,21975
void render_dungeon(719,22100
void delete_dungeon(750,22761
void init_dungeon(755,22818
int write_dungeon_map(761,22894
int write_rooms(774,23123
uint32_t calculate_dungeon_size(794,23542
int makedirectory(801,23764
int write_dungeon(836,24400
int read_dungeon_map(895,25785
int read_rooms(918,26383
int calculate_num_rooms(948,27152
int read_dungeon(956,27392
int read_pgm(1030,29093
void generateCharacteristics(1113,31218
int weightForHardness(1117,31275
struct block extractMin(1126,31551
struct block extractMinNonTunnel(1144,31952
void calculateDistance(1162,32436
void calculateDistanceNonTunnel(1237,34303
void usage(1313,36341
int main(1323,36551
